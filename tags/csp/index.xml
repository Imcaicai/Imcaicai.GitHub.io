<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>CSP - Tag - 菜菜的秘密花园</title>
        <link>https://imcaicai.github.io/tags/csp/</link>
        <description>CSP - Tag - 菜菜的秘密花园</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sun, 23 Apr 2023 21:02:45 &#43;0800</lastBuildDate><atom:link href="https://imcaicai.github.io/tags/csp/" rel="self" type="application/rss+xml" /><item>
    <title>【CSP】202303题解</title>
    <link>https://imcaicai.github.io/csp202303/</link>
    <pubDate>Sun, 23 Apr 2023 21:02:45 &#43;0800</pubDate>
    <author>菜菜</author>
    <guid>https://imcaicai.github.io/csp202303/</guid>
    <description><![CDATA[⏰ 时间：	🎯成绩：
   题号 时间/min 正确率 备注     1 20 ✅    2 30 ✅    3 40 ❌    4      5       1 田地丈量 🔗 题目：田地丈量
分情况求出长、宽，再计算总和即可。
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28  #include &lt;bits/stdc++.]]></description>
</item>
<item>
    <title>【CSP】202112题解</title>
    <link>https://imcaicai.github.io/csp202112/</link>
    <pubDate>Wed, 15 Mar 2023 14:45:33 &#43;0800</pubDate>
    <author>菜菜</author>
    <guid>https://imcaicai.github.io/csp202112/</guid>
    <description><![CDATA[1 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39  // 需要用 CPP11 或 CPP14 // #include&lt;bits/stdc++.h&gt; #include &lt;iostream&gt;using namespace std; int main(){ // 输入 n，m 	int n,m; scanf(&#34;%d %d&#34;,&amp;n,&amp;m); // 输入数列 	int a[n+1]={0}; for(int i=1;i&lt;=n;i++){ scanf(&#34;%d&#34;,&amp;a[i]); } // 计算 	int sum=0; int t=0; for(int i=1;i&lt;m;i++){ if(i&gt;=a[n]){ sum=sum+(m-i)*n; break; } for(int j=t+1;j&lt;=n;j++){ if(a[j]&gt;i){ t=j-1; sum=sum+t; break; } } } printf(&#34;%d&#34;, sum); }   2 错误的：]]></description>
</item>
<item>
    <title>【CSP】202203题解</title>
    <link>https://imcaicai.github.io/csp202203/</link>
    <pubDate>Tue, 14 Mar 2023 17:15:20 &#43;0800</pubDate>
    <author>菜菜</author>
    <guid>https://imcaicai.github.io/csp202203/</guid>
    <description><![CDATA[1 错误的：
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38  #include &lt;iostream&gt;#include &lt;cmath&gt;// #define _USE_MATH_DEFINES  using namespace std; int main() { // 输入变量个数 n，语句个数 k 	int n,k; scanf(&#34;%d&#34;,&amp;n); scanf(&#34;%d&#34;,&amp;k); // 输入语句 	int x[n+1]={0},y[n+1]={0},a[n+1]={0}; for(int i=1;i&lt;=k;i++){ scanf(&#34;%d&#34;,&amp;x[i]); scanf(&#34;%d&#34;,&amp;y[i]); } for(int i=1;i&lt;=k;i++){ if(a[x[i]]==0){ a[x[i]]=i; } } // 记录不符合的语句个数 	int cnt=0; for(int i=1;i&lt;=k;i++){ if(y[i]!]]></description>
</item>
<item>
    <title>【CSP】202206题解</title>
    <link>https://imcaicai.github.io/csp202206/</link>
    <pubDate>Tue, 14 Mar 2023 17:15:14 &#43;0800</pubDate>
    <author>菜菜</author>
    <guid>https://imcaicai.github.io/csp202206/</guid>
    <description><![CDATA[1 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35  #include &lt;iostream&gt;#include &lt;cmath&gt;// #define _USE_MATH_DEFINES  using namespace std; int main() { // 输入 n，a，计算总和 sum 	int n,sum=0; scanf(&#34;%d&#34;,&amp;n); int a[n]; for(int i=0;i&lt;n;i++){ scanf(&#34;%d&#34;,&amp;a[i]); sum+=a[i]; } // 计算平均数 x 	double x=(double)sum/n; // 计算方差 d 	double d=0; for(int i=0;i&lt;n;i++){ d=d+(a[i]-x)*(a[i]-x); } d=d/n; // 计算 f 	double f[n]; for(int i=0;i&lt;n;i++){ f[i]=(a[i]-x)/pow(d,0.]]></description>
</item>
<item>
    <title>【CSP】202209题解</title>
    <link>https://imcaicai.github.io/csp202209/</link>
    <pubDate>Tue, 14 Mar 2023 17:15:09 &#43;0800</pubDate>
    <author>菜菜</author>
    <guid>https://imcaicai.github.io/csp202209/</guid>
    <description><![CDATA[1 如此编码 🔗 题目：如此编码
本来看到题目很迷茫来着，想着第一题怎么就那么难，后来发现题目最后有提示，看完之后醍醐灌顶， 【取模】 确实是很妙的思路，可以积累下来。
代码忘存了QAQ。
2 何以包邮 🔗 题目：何以包邮
🔴 【动态规划】 设 sum 为所有参考书价格总和，题目可以理解为在 sum-x 价格内，最大化被删除的书价格总和，这样就可以把这个问题看作经典的 01背包问题 。（要学会转化💥💥💥）
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37  #include &lt;iostream&gt;#include &lt;cmath&gt; using namespace std; int main() { // 输入书本数量 n，包邮条件 x 	int n,x; scanf(&#34;%d&#34;,&amp;n); scanf(&#34;%d&#34;,&amp;x); // 输入书本价格，计算总和 sum 	int a[n]; int sum=0; for(int i=0;i&lt;n;i++){ scanf(&#34;%d&#34;,&amp;a[i]); sum+=a[i]; } // 动态规划，找前 i 本书的价格和最大，不超过 sum-x 	int d[n][sum-x+1]={0}; for(int j=0;j&lt;sum-x+1;j++){ d[0][j]=a[0]&gt;j ?]]></description>
</item>
<item>
    <title>【CSP】202212题解</title>
    <link>https://imcaicai.github.io/csp202212/</link>
    <pubDate>Tue, 14 Mar 2023 17:15:01 &#43;0800</pubDate>
    <author>菜菜</author>
    <guid>https://imcaicai.github.io/csp202212/</guid>
    <description><![CDATA[1 现值计算 🔗 题目：现值计算
🔴 注意 s=s/(1+i) + a[j] 是从后往前更新的，一开始写成从 a[0] 到 a[n] 出了 bug。
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22  #include &lt;iostream&gt;using namespace std; int main() { // 输入年数n，年利率i 	int n; double i; scanf(&#34;%d&#34;, &amp;n); scanf(&#34;%lf&#34;,&amp;i); double s=0;	// 保存最后结果 	int a[n+1];	// 每年收益 	for(int j=0;j&lt;n+1;j++){ scanf(&#34;%d&#34;, &amp;a[j]); } for(int j=n;j&gt;=0;j--){ s=s/(1+i) + a[j]; } printf(&#34;%f&#34;, s); }   2 训练计划 🔗 题目：训练计划]]></description>
</item>
</channel>
</rss>
