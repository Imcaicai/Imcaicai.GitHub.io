<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>C&#43;&#43; - Tag - 菜菜的秘密花园</title>
        <link>https://imcaicai.github.io/tags/c&#43;&#43;/</link>
        <description>C&#43;&#43; - Tag - 菜菜的秘密花园</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Thu, 18 May 2023 20:14:45 &#43;0800</lastBuildDate><atom:link href="https://imcaicai.github.io/tags/c&#43;&#43;/" rel="self" type="application/rss+xml" /><item>
    <title>【STL】bitset容器用法</title>
    <link>https://imcaicai.github.io/s/</link>
    <pubDate>Thu, 18 May 2023 20:14:45 &#43;0800</pubDate>
    <author>菜菜</author>
    <guid>https://imcaicai.github.io/s/</guid>
    <description><![CDATA[1 简介 🟠 由若干个位（bit）组成，它提供一些成员函数，使程序员不必通过位运算就能很方便地访问、修改其中的任意一位。
2 创建 1️⃣ 调用默认构造函数。
1  bitset&lt;N&gt; b;   3 常用的成员方法    成员方法 功能     count() 返回bitset中 1 的个数。   size() 返回位数。   test() 返回某一位下标是否为1   set() 全部置1,或者某一位置1或0   flip() 全部取反,或者某一位取反    ]]></description>
</item>
<item>
    <title>【CSP】刷题汇总</title>
    <link>https://imcaicai.github.io/csp%E5%88%B7%E9%A2%98%E6%B1%87%E6%80%BB/</link>
    <pubDate>Thu, 18 May 2023 20:12:04 &#43;0800</pubDate>
    <author>菜菜</author>
    <guid>https://imcaicai.github.io/csp%E5%88%B7%E9%A2%98%E6%B1%87%E6%80%BB/</guid>
    <description><![CDATA[202303 ⏰ 时间：90	🎯 成绩：200	🔗 链接
   题号 时间/min 正确率 备注     1 20 ✅    2 30 ✅    3 40 ❌ 🔸bitset、map、set用法🔸堆栈    202212 ⏰ 时间：	🎯成绩：	🔗 链接
   题号 时间/min 正确率 备注     1 10 ✅    2      3       202209 ⏰ 时间：	🎯成绩：	🔗 链接]]></description>
</item>
<item>
    <title>【CSP】202303题解</title>
    <link>https://imcaicai.github.io/csp202303/</link>
    <pubDate>Sun, 23 Apr 2023 21:02:45 &#43;0800</pubDate>
    <author>菜菜</author>
    <guid>https://imcaicai.github.io/csp202303/</guid>
    <description><![CDATA[1 田地丈量 🔗 题目：田地丈量
分情况求出长、宽，再计算总和即可。
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28  #include &lt;bits/stdc++.h&gt;using namespace std; int main(){ int n,a,b,x,y,x1,x2,y1,y2,sum=0; cin&gt;&gt;n&gt;&gt;a&gt;&gt;b; for(int i=0;i&lt;n;i++){ scanf(&#34;%d %d %d %d&#34;,&amp;x1,&amp;y1,&amp;x2,&amp;y2); if(x1&lt;0 &amp;&amp; x2&gt;=0 &amp;&amp; x2&lt;=a)	x=x2; else if(x1&lt;0 &amp;&amp; x2&gt;a)	x=a; else if(x1&gt;=0 &amp;&amp; x1&lt;=a &amp;&amp; x2&gt;a)	x=a-x1; else if(x1&gt;=0 &amp;&amp; x1&lt;=a &amp;&amp; x2&gt;=0 &amp;&amp; x2&lt;=a)	x=x2-x1; else continue; if(y1&lt;0 &amp;&amp; y2&gt;=0 &amp;&amp; y2&lt;=b)	y=y2; else if(y1&lt;0 &amp;&amp; y2&gt;b)	y=b; else if(y1&gt;=0 &amp;&amp; y1&lt;=b &amp;&amp; y2&gt;b)	y=b-y1; else if(y1&gt;=0 &amp;&amp; y1&lt;=b &amp;&amp; y2&gt;=0 &amp;&amp; y2&lt;=b)	y=y2-y1; else continue; sum+=x*y; } cout&lt;&lt;sum; return 0; }   2 垦田计划 🔗 题目：垦田计划]]></description>
</item>
<item>
    <title>【蓝桥杯】2015题解</title>
    <link>https://imcaicai.github.io/%E8%93%9D%E6%A1%A5%E6%9D%AF2015/</link>
    <pubDate>Tue, 04 Apr 2023 08:14:24 &#43;0800</pubDate>
    <author>菜菜</author>
    <guid>https://imcaicai.github.io/%E8%93%9D%E6%A1%A5%E6%9D%AF2015/</guid>
    <description><![CDATA[⏰总用时：89/240	🎯总分：73/150
   题号 时间 结果 满分 难度 备注     1 3 ✅ 3 🌕    2 3 ✅ 5 🌕 🔹 在Excel中直接用日期格式拉出答案   3 10 ✅ 9 🌕 🔸 直接用next_permutation(a,a+10) 来枚举   4 15 ✅ 11 🌕 🔹 注意 printf、scanf 中 %*s 的用法   5 1 ✅ 15 🌕 🔸 注意此题 dfs 的用法   6 15 ✅ 17 🌕 🔹 dfs   7 10 ❌ 21 🌓 🔸 全排列+特殊去重🔸 去重旋转：判断 t 是否是 s+s 的子串🔸 在字符串中寻找子串：s.]]></description>
</item>
<item>
    <title>【蓝桥杯】2016题解</title>
    <link>https://imcaicai.github.io/%E8%93%9D%E6%A1%A5%E6%9D%AF2016/</link>
    <pubDate>Mon, 03 Apr 2023 14:11:18 &#43;0800</pubDate>
    <author>菜菜</author>
    <guid>https://imcaicai.github.io/%E8%93%9D%E6%A1%A5%E6%9D%AF2016/</guid>
    <description><![CDATA[⏰总用时：146/240	🎯总分：66/150
   题号 时间 结果 满分 难度 备注     1 3 ✅ 3 🌕    2 3 ✅ 5 🌕    3 40 ❌ 11 🌓 🔸 直接用 next_permutation(a,a+10) 来枚举所有可能   4 5 ✅ 9 🌕    5 10 ✅ 13 🌓 🔸 消除末尾连续的 1 ： x&amp;(x+1)   6 35 ✅ 15 🌕 🔹 dfs   7 30 ❌ 19 🌓 🔸 先枚举，再用dfs判断连通性🔸 压缩：用一维数组存储2×3矩阵   8 10 ✅ 21 🌕 🔹 暴力枚举   9 5 ❌ 25 🌓 🔸 问题转化为求【最长回文子序列】🔸 动态规划、带备忘录   10 5 ❌ 29      1 【填空】网友年龄 题目 某君新认识一网友。 当问及年龄时，他的网友说： “我的年龄是个 2 位数，我比儿子大 27 岁, 如果把我的年龄的两位数字交换位置，刚好就是我儿子的年龄”]]></description>
</item>
<item>
    <title>【蓝桥杯】2017题解</title>
    <link>https://imcaicai.github.io/%E8%93%9D%E6%A1%A5%E6%9D%AF2017/</link>
    <pubDate>Sun, 02 Apr 2023 11:53:31 &#43;0800</pubDate>
    <author>菜菜</author>
    <guid>https://imcaicai.github.io/%E8%93%9D%E6%A1%A5%E6%9D%AF2017/</guid>
    <description><![CDATA[⏰总用时：170/240	🎯总分：32.5/150
   题号 时间 结果 满分 难度 备注     1 45 ✅ 5 🌓 🔸 dfs🔸 注意考虑回路的情况   2 15 ❌ 11 🌓 🔹 考虑空盘子的跳法🔹 数据结构、bfs🔹 注意 set 容器的用法   3 5 ❌ 13 🌑 🔸 Burnside引理   4 5 ❌ 17 🌓 🔹 考虑分割线的走法🔹 【dfs】从对称中心开始遍历   5 5 ✅ 7 🌕    6 10 ✅ 9 🌕    7 25 ❌ 19 🌓 🔸 dfs   8 5 ❌ 21 🌓 🔹 动态规划：要判断的包子数设置一个上限🔹 所有包子数最大公因数不为1，则凑不出来的有无数个   9 30 50% 23 🌓 🔸 二分   10 25 ❌ 25      1 【填空】迷宫 题目 X 星球的一处迷宫游乐场建在某个小山坡上。它是由 10×10 相互连通的小房间组成的。房间的地板上写着一个很大的字母。我们假设玩家是面朝上坡的方向站立，则：]]></description>
</item>
<item>
    <title>【蓝桥杯】2018题解</title>
    <link>https://imcaicai.github.io/%E8%93%9D%E6%A1%A5%E6%9D%AF2018/</link>
    <pubDate>Thu, 30 Mar 2023 15:48:27 &#43;0800</pubDate>
    <author>菜菜</author>
    <guid>https://imcaicai.github.io/%E8%93%9D%E6%A1%A5%E6%9D%AF2018/</guid>
    <description><![CDATA[⏰总用时：245/240	🎯总分：59.1/150
   题号 时间 结果 满分 难度 备注     1 5 ❌ 5 🌕 🔸 计算完一定要带入样例检验，漏加了 1 ❗❗❗   2 15 ✅ 7 🌕    3 40 ✅ 9 🌕    4 10 ✅ 13 🌕    5 5 ✅ 11 🌕    6 60 ✅ 17 🌕 🔹 注意 scanf，printf 格式化输入输出的使用   7 25 ❌ 19 🌑 🔸 三维差分数组🔸 二分法查找🔸 压缩数组🔸 memcpy()用法   8 25 10% 21 🌓 🔹 【dfs】每次遍历一整块岛屿，并标记其是否能幸存🔹 用%c时小心读入空行等🔹 注意代码中变量类型的错误   9 10 ❌ 23 🌓 🔸 暴力   10 50 ❌ 25      1 【填空】分数 题目 1/1+1/2+1/4+1/8+&hellip;&hellip;]]></description>
</item>
<item>
    <title>【STL】queue容器用法</title>
    <link>https://imcaicai.github.io/stlqueue%E5%AE%B9%E5%99%A8%E7%94%A8%E6%B3%95/</link>
    <pubDate>Wed, 29 Mar 2023 16:38:44 &#43;0800</pubDate>
    <author>菜菜</author>
    <guid>https://imcaicai.github.io/stlqueue%E5%AE%B9%E5%99%A8%E7%94%A8%E6%B3%95/</guid>
    <description><![CDATA[1 创建queue 1  queue&lt;int&gt; q;   2 常用操作    front() 返回 queue 中第一个元素的引用。     back() 返回 queue 中最后一个元素的引用   push(T&amp;&amp; obj) 以移动的方式在 queue 的尾部添加元素。   pop() 删除 queue 中的第一个元素。   empty() 如果 queue 中没有元素的话，返回 true。   size() 返回 queue 中元素的个数。    ]]></description>
</item>
<item>
    <title>【蓝桥杯】2019题解</title>
    <link>https://imcaicai.github.io/%E8%93%9D%E6%A1%A5%E6%9D%AF2019/</link>
    <pubDate>Tue, 28 Mar 2023 08:43:22 &#43;0800</pubDate>
    <author>菜菜</author>
    <guid>https://imcaicai.github.io/%E8%93%9D%E6%A1%A5%E6%9D%AF2019/</guid>
    <description><![CDATA[⏰总用时：170/240	🎯总分：39/150
   题号 时间 结果 满分 难度 备注     1 5 ✅ 5 🌕    2 5 ✅ 5 🌕    3 5 ✅ 10 🌕    4 20 ❌ 10 🌓 🔹 用 BFS、queue 遍历🔹 输入地图时用 char 而不是 int   5 35 ❌ 10 🌓 🔸 快速计算 $a^b(mod p)$🔸 快速计算 $a*b(mod p)$   6 20 20% 15 🌓 🔹 二叉树🔹 先算出每个节点所在层数，再根据层数算总和，这样不会超时   7 40 40% 20 🌓 🔸 模拟🔸 用 map 容器，以外卖店的视角存储订单信息🔸 可以通过的，要注意易错的细节❗❗❗   8 30 40% 20 🌓 🔹 并查集（不过没用）   9 10 ❌ 25 🌑 🔸 状压dp🔸 fill()：初始化数组，填充内容可不为0   10   25      1 【填空】平方和 题目 小明对数位中含有 2、0、1、9 的数字很感兴趣，在 1 到 40 中这样的数包括 1、2、9、10 至 32、39 和 40，共 28 个，他们的和是 574。]]></description>
</item>
<item>
    <title>【蓝桥杯】2022题解</title>
    <link>https://imcaicai.github.io/%E8%93%9D%E6%A1%A5%E6%9D%AF2022/</link>
    <pubDate>Wed, 22 Mar 2023 10:39:32 &#43;0800</pubDate>
    <author>菜菜</author>
    <guid>https://imcaicai.github.io/%E8%93%9D%E6%A1%A5%E6%9D%AF2022/</guid>
    <description><![CDATA[⏰总用时：125/240	🎯总分：14.5/150
   题号 时间 结果 满分 难度 备注     1 5 ✅ 5 🌕    2 5 ❌ 5 🌓 🔹 博弈论：只能转移到必胜态的，均为必败态。可以转移到必败态的，均为必胜态🔹 c++中计算字符串中某字符个数：count(s.begin(),s.end(),&lsquo;o&rsquo;)🔹 DFS：深搜的时候保存已有结果🔹 二维数组可直接压缩为一维数组🔹 遍历不连续数组，可把要遍历的索引存储在一个数组中   3 5 30% 10 🌕 🔸 先观察所求式子能否化简，注意超时问题🔸 注意题目所给数据范围，答案应该用 long long型   4 30 40% 10 🌓 🔹 巧妙构造数组可以简化题目🔹 若 a ^ b=x，则 a ^ x=b， b ^ x=a。🔹 可以用 map 来映射一组数和他们的索引🔹 直接把异或表达式放 if 语句或输出语句中会出错   5 5 ❌ 10 🌑 🔸 【分数取模】、【快速幂】🔸 注意找递推关系🔸 加快输入速度：ios::sync_with_stdio(false); cin.]]></description>
</item>
</channel>
</rss>
