<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>深度学习 - Tag - LoveIt</title>
        <link>https://imcaicai.github.io/tags/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/</link>
        <description>深度学习 - Tag - LoveIt</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Mon, 17 Oct 2022 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://imcaicai.github.io/tags/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/" rel="self" type="application/rss+xml" /><item>
    <title>Vision GNN: An Image is Worth Graph of Nodes</title>
    <link>https://imcaicai.github.io/an-image-is-worth-graph-of-nodes/</link>
    <pubDate>Mon, 17 Oct 2022 00:00:00 &#43;0000</pubDate>
    <author>     &#34;菜菜&#34;</author>
    <guid>https://imcaicai.github.io/an-image-is-worth-graph-of-nodes/</guid>
    <description><![CDATA[本文为论文：Vision GNN: An Image is Worth Graph of Nodes 的阅读笔记。
论文下载
引言 网络架构在基于深度学习的计算机视觉中起着关键作用。广泛使用的CNN和 transformer（变换器）将图像视为 grid（网格）或 sequence（序列）结构，这对于捕捉不规则、复杂的物体来说是不灵活的。本文建议将图像表示为一个 graph 结构，并引入一个新的 Vision GNN（ViG）架构来提取视觉任务的图层特征。
文章主要工作：
 介绍了计算机视觉方面的现有模型方法和成果 介绍ViG模型的构建过程及工作原理，为未来的研究提供有用的灵感和经验 通过图像分类和物体检测实验证明了ViG模型在视觉任务中的有效性  ViG包括两个基本模块。图形模块具有图形卷积功能，用于聚合和更新图形信息。更新图信息的Grapher模块，以及带有两个线性层的FFN模块，用于节点特征转换。特征转换。ViG的各向同性和金字塔结构都是以不同的模型尺寸建立的。不同的模型大小。在图像识别和物体检测任务上进行了大量的实验，证明了我们的方法的优越性。在图像识别和物体检测任务上的大量实验证明了我们的ViG架构的优越性。我们希望这个在一般视觉任务上对GNN的开创性研究将为未来的研究提供有用的灵感和经验。为未来的研究提供有用的灵感和经验。
相关研究 CNN 曾经是计算机视觉中标准的网络结构，但近来 transformer with attention mechanism 、MLP-based 等模型也在不断发展，这些正在将视觉模型推向一个前所未有的高度。
3种图像结构 不同的网络结构以不同的方式处理输入的图像，通常有 grid structure, sequence structure, graph structure 3种，如下图所示。在 grid structure  和 sequence structure 中，节点只按空间位置排序；在 graph structure 中，节点是通过其内容连接的，不受局部位置的限制。
CNN 在图像上应用滑动窗口，并引入移位变异性和位置性；最近的 vision transformer 或 MLP 将图像视为 a sequence of patches（补丁序列）。
由于物体形状通常不是规则的四边形，常用的 grid 或 sequence 结构处理起图像来不够灵活，所以在本文中采用 graph structure 。]]></description>
</item>
</channel>
</rss>
